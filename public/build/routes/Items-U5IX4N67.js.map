{
  "version": 3,
  "sources": ["empty-module:~/db/config.server", "empty-module:@remix-run/node", "empty-module:~/db/schema.server", "../../../app/routes/Items.tsx"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/Items.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/Items.tsx\");\n  import.meta.hot.lastModified = \"1706201947279.5261\";\n}\n// REMIX HMR END\n\nimport { db } from \"~/db/config.server\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, useLoaderData } from \"@remix-run/react\";\nimport { items } from \"~/db/schema.server\";\nimport { eq } from \"drizzle-orm\";\n\n// backend  functions \nexport async function loader() {\n  // use drizzle to get the dataset(s)\n  const dataSets = db.select().from(items).all();\n  return json(dataSets);\n}\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const {\n    _action,\n    ...values\n  } = Object.fromEntries(formData);\n\n  //    let {...values} = Object.fromEntries(formData);  \n\n  //  let title = String(formData.get(\"title\"));\n  //  let desc = String(formData.get(\"description\"));\n\n  //  console.log(\" content of values:\"  + JSON.stringify(values)  )\n  // console.log(\"result:\", values);\n  console.log(\"content of values:\", values, \"title:\", values.title, \"description:\", values.description);\n  // console.log(\"action is :\",_action)\n\n  if (_action == \"create\") {\n    // db.insert(items).values(\n    //                 { ...values }).run()\n\n    // export async function action() {\n    //   db.insert(items).values({ title: \"Item title 12\" }).run()\n    //   return {\n    //     success: true,\n    //   }\n    // }\n\n    db.insert(items).values({\n      title: values.title,\n      description: values.description,\n      createdAt: String(new Date().toLocaleDateString(\"en-PK\")),\n      updatedAt: String(new Date().toLocaleDateString(\"en-PK\"))\n    }).run();\n    return {\n      success: true\n    };\n  }\n  if (_action == \"delete\") {\n    return await db.delete(items).where(eq(items.id, values.id));\n  }\n  return {\n    success: true\n  };\n}\n\n// front end rendering\nexport default function DisplayItems() {\n  _s();\n  const Items = useLoaderData();\n  return <main>\n          <h1>Items</h1>\n         {Items.length ? <ul>\n                {Items.map(item => <li key={item.id}>\n                   {item.id} {\" \"} {item.title} {item.description}\n                   <Form style={{\n          display: \"inline\"\n        }} method=\"post\">\n                    <input type=\"hidden\" name=\"id\" value={item.id} />\n                    <input type=\"hidden\" name=\"createAt\" value={item.createdAt} />\n\n                      <button type=\"submit\" aria-label=\"delete\" name=\"_action\" value=\"delete\">\n                        X\n                      </button>\n                   \n                   </Form>\n                </li>)}\n            </ul> : <p> No Items</p>} \n          <Form method=\"post\">\n            <input type=\"text\" name=\"title\" placeholder=\"Enter title\" required /> {\" \"}\n            <input type=\"text\" name=\"description\" placeholder=\"Enter description\" required /> {\" \"}            \n            <button type=\"submit\" name=\"_action\" value=\"create\">Add</button>\n          </Form>\n         <Link to=\"/\">Home</Link>\n        </main>;\n}\n_s(DisplayItems, \"gky+tL2sZec11SLy2HF/GDaT1Zg=\", false, function () {\n  return [useLoaderData];\n});\n_c = DisplayItems;\nvar _c;\n$RefreshReg$(_c, \"DisplayItems\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAlB;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAlB;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACqBlB,oBAAmB;AACnB,kBAAqB;AAErB,oBAAsB;AA8DZ;AArFV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2BAA6B,EAAE;AAAA,EACxE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsB;AACtB,cAAY,IAAI,eAAe;AACjC;AAgEe,SAAR,eAAgC;AACrC,KAAG;AACH,QAAM,QAAQ,cAAc;AAC5B,SAAO,mDAAC,UACA;AAAA,uDAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,MAAM,SAAS,mDAAC,QACT,gBAAM,IAAI,UAAQ,mDAAC,QAChB;AAAA,WAAK;AAAA,MAAG;AAAA,MAAE;AAAA,MAAI;AAAA,MAAE,KAAK;AAAA,MAAM;AAAA,MAAE,KAAK;AAAA,MACnC,mDAAC,QAAK,OAAO;AAAA,QACtB,SAAS;AAAA,MACX,GAAG,QAAO,QACE;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,MAAK,OAAO,KAAK,MAA3C;AAAA;AAAA;AAAA;AAAA,eAA+C;AAAA,QAC/C,mDAAC,WAAM,MAAK,UAAS,MAAK,YAAW,OAAO,KAAK,aAAjD;AAAA;AAAA;AAAA;AAAA,eAA4D;AAAA,QAE1D,mDAAC,YAAO,MAAK,UAAS,cAAW,UAAS,MAAK,WAAU,OAAM,UAAS,iBAAxE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WARH;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,SAZyB,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,WAanB,CAAK,KAdI;AAAA;AAAA;AAAA;AAAA,WAeb,IAAQ,mDAAC,OAAE,yBAAH;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,IACtB,mDAAC,QAAK,QAAO,QACX;AAAA,yDAAC,WAAM,MAAK,QAAO,MAAK,SAAQ,aAAY,eAAc,UAAQ,QAAlE;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MAAE;AAAA,MAAE;AAAA,MACvE,mDAAC,WAAM,MAAK,QAAO,MAAK,eAAc,aAAY,qBAAoB,UAAQ,QAA9E;AAAA;AAAA;AAAA;AAAA,aAA+E;AAAA,MAAE;AAAA,MAAE;AAAA,MACnF,mDAAC,YAAO,MAAK,UAAS,MAAK,WAAU,OAAM,UAAS,mBAApD;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,SAHzD;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACD,mDAAC,QAAK,IAAG,KAAI,oBAAb;AAAA;AAAA;AAAA;AAAA,WAAiB;AAAA,OAvBjB;AAAA;AAAA;AAAA;AAAA,SAwBD;AACR;AACA,GAAG,cAAc,gCAAgC,OAAO,WAAY;AAClE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
